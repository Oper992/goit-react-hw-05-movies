{"version":3,"file":"static/js/186.d43cc4c9.chunk.js","mappings":"8LA0BA,UAtBgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBH,GACnBI,MAAK,SAAAN,GAAO,OAAIC,EAAWD,EAAQO,YACnCC,OAAM,SAAAC,GAAK,OAAIA,EAAMC,aACvB,CAACR,KAGF,wBACGF,EAAQW,OACLX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASZ,EAApB,EAAoBA,GAApB,OACV,2BACE,qCAAaW,KADf,KAC4B,uBAAIC,MADvBZ,MAIX","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviewsById } from '..//../service/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviewsById(id)\n      .then(reviews => setReviews(reviews.results))\n      .catch(error => error.message);\n  }, [id]);\n\n  return (\n    <ul>\n      {reviews.length\n        ? reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3> <p>{content}</p>\n            </li>\n          ))\n        : \"We don't have any reviews for this movie\"}\n    </ul>\n  );\n};\nexport default Reviews"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchMovieReviewsById","then","results","catch","error","message","length","map","author","content"],"sourceRoot":""}