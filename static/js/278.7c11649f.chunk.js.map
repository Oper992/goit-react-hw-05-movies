{"version":3,"file":"static/js/278.7c11649f.chunk.js","mappings":"oMAGaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,GAAhB,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGG,GAAgBC,KAFZC,U,oFCqDjB,UAzDe,WACb,OAA0CI,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAoCA,OArBAC,EAAAA,EAAAA,YAAU,WACRF,EAAaG,IAAI,SAAWL,EAASE,EAAaG,IAAI,WACrD,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WAEJF,EAAaG,IAAI,UACnBC,EAAAA,EAAAA,IAAkBJ,EAAaG,IAAI,SAChCE,MAAK,SAAArB,GACJ,IAAMsB,EAAyBtB,EAAOuB,QAAQpB,KAC5C,YACE,MAAO,CAAEC,MADc,EAAtBA,MACeC,KADO,EAAfA,KACcC,GADC,EAATA,OAKlBM,EAAiBU,MAElBE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,cAErC,CAACZ,KAGF,iCACE,kBAAMa,SApCO,SAAAC,GACfA,EAAEC,iBACF,IAAMlB,EAAQiB,EAAEE,OAAO,GAAGC,MAG1BhB,EAF6B,KAAVJ,EAAe,CAAER,KAAMQ,GAAU,KAiClD,WACE,kBACEqB,SA9BS,SAAAJ,GAEfhB,EAASgB,EAAEE,OAAOC,QA6BZA,MAAOpB,EACPsB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,yDAEd,mBAAQH,KAAK,SAAb,uBAEwB,IAAzBxB,EAAc4B,SAAgB,SAAC,IAAD,CAAYvC,OAAQW,S,oLCxDnD6B,EAAU,mCACVC,EAAW,+BAEJC,EAAkB,mCAAG,sGACTC,MAAM,GAAD,OACvBF,EADuB,uCACgBD,IAFZ,cAC1BI,EAD0B,gBAIXA,EAASC,OAJE,cAI1B7C,EAJ0B,yBAMzBA,EAAOuB,SANkB,2CAAH,qDASlBuB,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,MAAM,GAAD,OACvBF,EADuB,kBACLM,EADK,oBACcP,IAFd,cACtBI,EADsB,gBAIPA,EAASC,OAJF,cAItB7C,EAJsB,yBAMrBA,GANqB,2CAAH,sDASdoB,EAAiB,mCAAG,WAAMP,GAAN,yFACR8B,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBAC2B3B,IAFxB,cACzB+B,EADyB,gBAIVA,EAASC,OAJC,cAIzB7C,EAJyB,yBAMxBA,GANwB,2CAAH,sDASjBgD,EAAqB,mCAAG,WAAMD,GAAN,yFACZJ,MAAM,GAAD,OACvBF,EADuB,kBACLM,EADK,4BACsBP,IAFf,cAC7BI,EAD6B,gBAIdA,EAASC,OAJK,cAI7B7C,EAJ6B,yBAM5BA,GAN4B,2CAAH,sDASrBiD,EAAqB,mCAAG,WAAMF,GAAN,yFACZJ,MAAM,GAAD,OACvBF,EADuB,kBACLM,EADK,4BACsBP,IAFf,cAC7BI,EAD6B,gBAIdA,EAASC,OAJK,cAI7B7C,EAJ6B,yBAM5BA,GAN4B,2CAAH","sources":["components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, name, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title ? title : name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByQuery } from '..//../service/api';\nimport { MoviesList } from '..//../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const query = e.target[0].value;\n    const nextParams = query !== '' ? { name: query } : {};\n\n    setSearchParams(nextParams);\n  };\n\n  const onChange = e => {\n    // console.log(e.target.value);\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    searchParams.get('name') && setQuery(searchParams.get('name'));\n  }, [searchParams]);\n\n  useEffect(() => {\n    // console.log(searchParams.get('name'));\n    if (searchParams.get('name')) {\n      fetchMovieByQuery(searchParams.get('name'))\n        .then(movies => {\n          const justTheRightProperties = movies.results.map(\n            ({ title, name, id }) => {\n              return { title, name, id };\n            }\n          );\n\n          setMoviesByQuery(justTheRightProperties);\n        })\n        .catch(error => console.log(error.message));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"паляниця...\"\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {moviesByQuery.length !== 0 && <MoviesList movies={moviesByQuery} />}\n    </>\n  );\n};\n\nexport default Movies;\n","// const axios = require('axios').default;\nconst API_KEY = '4c205a55573f45aaf55bacec768fd5ae';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingToday = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const movies = await response.json();\n\n  return movies.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  const movies = await response.json();\n\n  return movies;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const movies = await response.json();\n  //   console.log(movies);\n  return movies;\n};\n\nexport const fetchMovieCreditsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const movies = await response.json();\n  //   console.log(movies);\n  return movies;\n};\n\nexport const fetchMovieReviewsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const movies = await response.json();\n  // console.log(movies);\n  return movies;\n};\n"],"names":["MoviesList","movies","location","useLocation","map","title","name","id","to","state","from","useState","moviesByQuery","setMoviesByQuery","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","fetchMovieByQuery","then","justTheRightProperties","results","catch","error","console","log","message","onSubmit","e","preventDefault","target","value","onChange","type","autoComplete","autoFocus","placeholder","length","API_KEY","BASE_URL","fetchTrendingToday","fetch","response","json","fetchMovieById","movieId","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}