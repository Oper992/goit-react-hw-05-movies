{"version":3,"file":"static/js/200.d857f644.chunk.js","mappings":"+PACA,EAA4B,6BAA5B,EAAkE,0B,SC+FlE,EA3FkB,WAAO,IAAD,IACtB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEUC,EAAAA,EAAAA,IAAeT,GAFzB,OAEPU,EAFO,OAIbb,EAASa,GACTX,EAAU,WALG,gDAQbY,QAAQC,IAAI,KAAMC,SARL,yDAAH,qDAYdL,MACC,CAACR,IAEJ,IAIQc,EAA+ClB,EAA/CkB,YAAaC,EAAkCnB,EAAlCmB,MAAOC,EAA2BpB,EAA3BoB,KAAMC,EAAqBrB,EAArBqB,SAAUC,EAAWtB,EAAXsB,OAE5C,OACE,8BACc,YAAXpB,IACC,iCACE,UAAC,KAAD,CAAMqB,GAAIf,EAAV,UAAyB,KAAzB,eACA,iBAAKgB,UAAWC,EAAhB,WACE,gBACEC,IAAG,6DAAwDR,GAC3DS,IAAI,MAGN,4BACE,wBAAKR,GAAgBC,KACrB,kDAlBHQ,KAAKC,MAA2B,GAArB7B,EAAM8B,cAkBd,SACA,sCACA,uBAAIT,KACJ,oCACA,gBAAKG,UAAWC,EAAhB,SACGH,EAAOS,KAAI,gBAAG3B,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAP,OACV,uBAAaA,GAALhB,eAKhB,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CACEmB,GAAG,OACHd,MACEH,EAASG,MAAMC,KACX,CAAEA,KAAMJ,EAASG,MAAMC,MACvB,CAAEA,KAAM,KALhB,qBAWF,yBACE,SAAC,KAAD,CACEa,GAAG,SACHd,MACEH,EAASG,MAAMC,KACX,CAAEA,KAAMJ,EAASG,MAAMC,MACvB,CAAEA,KAAM,KALhB,6BAaN,SAAC,EAAAsB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,a,oLCvFNC,EAAU,mCACVC,EAAW,+BAEJC,EAAkB,mCAAG,sGACTC,MAAM,GAAD,OACvBF,EADuB,uCACgBD,IAFZ,cAC1BpB,EAD0B,gBAIXA,EAASwB,OAJE,cAI1BC,EAJ0B,yBAMzBA,EAAOC,SANkB,2CAAH,qDASlB3B,EAAc,mCAAG,WAAM4B,GAAN,yFACLJ,MAAM,GAAD,OACvBF,EADuB,kBACLM,EADK,oBACcP,IAFd,cACtBpB,EADsB,gBAIPA,EAASwB,OAJF,cAItBC,EAJsB,yBAMrBA,GANqB,2CAAH,sDASdG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBAC2BS,IAFxB,cACzB7B,EADyB,gBAIVA,EAASwB,OAJC,cAIzBC,EAJyB,yBAMxBA,GANwB,2CAAH,sDASjBK,EAAqB,mCAAG,WAAMH,GAAN,yFACZJ,MAAM,GAAD,OACvBF,EADuB,kBACLM,EADK,4BACsBP,IAFf,cAC7BpB,EAD6B,gBAIdA,EAASwB,OAJK,cAI7BC,EAJ6B,yBAM5BA,GAN4B,2CAAH,sDASrBM,EAAqB,mCAAG,WAAMJ,GAAN,yFACZJ,MAAM,GAAD,OACvBF,EADuB,kBACLM,EADK,4BACsBP,IAFf,cAC7BpB,EAD6B,gBAIdA,EAASwB,OAJK,cAI7BC,EAJ6B,yBAM5BA,GAN4B,2CAAH","sources":["webpack://react-homework-template/./src/pages/MovieInfo/MovieInfo.module.css?aa0c","pages/MovieInfo/MovieInfo.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieInfo\":\"MovieInfo_movieInfo__4x3yr\",\"genres\":\"MovieInfo_genres__jAei7\"};","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from '../../service/api';\nimport styled from './MovieInfo.module.css';\n\nconst MovieInfo = () => {\n  const [movie, setMovie] = useState({});\n  const [status, setStatus] = useState('idle');\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const addMovie = async () => {\n      try {\n        const response = await fetchMovieById(id);\n\n        setMovie(response);\n        setStatus('resolve');\n        // console.log(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    addMovie();\n  }, [id]);\n\n  const userScore = () => {\n    return Math.trunc(movie.vote_average * 10);\n  };\n\n  const { poster_path, title, name, overview, genres } = movie;\n\n  return (\n    <>\n      {status === 'resolve' && (\n        <>\n          <Link to={backLinkHref}>{'<-'} Go back</Link>\n          <div className={styled.movieInfo}>\n            <img\n              src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${poster_path}`}\n              alt=\"\"\n            />\n\n            <div>\n              <h1>{title ? title : name}</h1>\n              <p>User score: {`${userScore()}%`}</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <div className={styled.genres}>\n                {genres.map(({ id, name }) => (\n                  <p key={id}>{name}</p>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link\n                  to=\"cast\"\n                  state={\n                    location.state.from\n                      ? { from: location.state.from }\n                      : { from: '/' }\n                  }\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"review\"\n                  state={\n                    location.state.from\n                      ? { from: location.state.from }\n                      : { from: '/' }\n                  }\n                >\n                  Review\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieInfo;\n","// const axios = require('axios').default;\nconst API_KEY = '4c205a55573f45aaf55bacec768fd5ae';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingToday = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const movies = await response.json();\n\n  return movies.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  const movies = await response.json();\n\n  return movies;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const movies = await response.json();\n  //   console.log(movies);\n  return movies;\n};\n\nexport const fetchMovieCreditsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const movies = await response.json();\n  //   console.log(movies);\n  return movies;\n};\n\nexport const fetchMovieReviewsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const movies = await response.json();\n  // console.log(movies);\n  return movies;\n};\n"],"names":["useState","movie","setMovie","status","setStatus","id","useParams","location","useLocation","backLinkHref","state","from","useEffect","addMovie","fetchMovieById","response","console","log","message","poster_path","title","name","overview","genres","to","className","styled","src","alt","Math","trunc","vote_average","map","Suspense","fallback","API_KEY","BASE_URL","fetchTrendingToday","fetch","json","movies","results","movieId","fetchMovieByQuery","query","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}